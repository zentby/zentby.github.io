<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>YangTalks</title><link>https://en.yangtalks.com/</link><description></description><lastBuildDate>Sun, 12 Jul 2020 21:30:00 +1200</lastBuildDate><item><title>Step by step starting serverless asp.net</title><link>https://en.yangtalks.com/2020/dotnet-lambda-serverless.html</link><description>&lt;p&gt;The CSOD "Spring" Hackathon was held last week. My team spent a whole day to help me finish an ambitious idea. Though we didn't win the competition in the end, we had a lot of fun and did learn many …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yang Zhao</dc:creator><pubDate>Sun, 12 Jul 2020 21:30:00 +1200</pubDate><guid isPermaLink="false">tag:en.yangtalks.com,2020-07-12:/2020/dotnet-lambda-serverless.html</guid><category>Serverless</category><category>aws</category><category>serverless</category><category>dotnetcore</category></item><item><title>Building Docker Image</title><link>https://en.yangtalks.com/2018/dockerfile.html</link><description>&lt;h2&gt;Dockerfile&lt;/h2&gt;
&lt;p&gt;Docker images are built from layered containers. The &lt;code&gt;Dockerfile&lt;/code&gt; is a tool that lets you define reproducable docker image.&lt;/p&gt;
&lt;p&gt;Generally, we are doing a few things inside a Dockerfile to define an image:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Basic Running Environment&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Is your …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yang Zhao</dc:creator><pubDate>Sat, 08 Sep 2018 21:30:00 +1200</pubDate><guid isPermaLink="false">tag:en.yangtalks.com,2018-09-08:/2018/dockerfile.html</guid><category>Container</category><category>docker</category><category>container</category></item><item><title>Running App in Docker (2)</title><link>https://en.yangtalks.com/2018/docker-compose.html</link><description>&lt;h2&gt;Docker Compose&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;docker run&lt;/code&gt; can be tedious sometimes if you have a lot of parameters to pass in or you need to re-run the container multiple times.&lt;/p&gt;
&lt;p&gt;Docker Compose is a tool that can help you run the commands via …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yang Zhao</dc:creator><pubDate>Sat, 08 Sep 2018 20:30:00 +1200</pubDate><guid isPermaLink="false">tag:en.yangtalks.com,2018-09-08:/2018/docker-compose.html</guid><category>Container</category><category>docker</category><category>container</category></item><item><title>Running App in Docker (1)</title><link>https://en.yangtalks.com/2018/docker-run.html</link><description>&lt;h2&gt;Docker Run&lt;/h2&gt;
&lt;p&gt;When you are likely to run a container on your own machine, you need two steps.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Find the image repository and a proper tag.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;docker run&lt;/code&gt; to set container runtime parameters and then start.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Example&lt;/h3&gt;
&lt;p&gt;We'd like …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yang Zhao</dc:creator><pubDate>Sat, 08 Sep 2018 19:30:00 +1200</pubDate><guid isPermaLink="false">tag:en.yangtalks.com,2018-09-08:/2018/docker-run.html</guid><category>Container</category><category>docker</category><category>container</category></item><item><title>1998 ~ 2018 -- from Server to Container</title><link>https://en.yangtalks.com/2018/docker-2.html</link><description>&lt;p&gt;&lt;em&gt;A recap from an internal sharing session&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The technology develops in two ways, improving with the existing one and taking a breaking through.&lt;/p&gt;
&lt;p&gt;20 years ago, in the year of 1998, the servers were running on physical servers. There is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yang Zhao</dc:creator><pubDate>Fri, 10 Aug 2018 20:30:00 +1200</pubDate><guid isPermaLink="false">tag:en.yangtalks.com,2018-08-10:/2018/docker-2.html</guid><category>Container</category><category>docker</category><category>container</category></item><item><title>Way to typescript</title><link>https://en.yangtalks.com/2018/way-to-typescript.html</link><description>&lt;p&gt;&lt;img alt="grunt-typescript" src="https://en.yangtalks.com/2018/grunt-ts.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Recently team &lt;strong&gt;BOLT&lt;/strong&gt; just upgraded the NPM packages in &lt;strong&gt;Unleashed.UI&lt;/strong&gt; project and enabled the support of Typescript in the AngularJS app.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;
The key to support TS in Unleashed.UI is to install the required packages and integrate …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yang Zhao</dc:creator><pubDate>Fri, 13 Jul 2018 20:30:00 +1200</pubDate><guid isPermaLink="false">tag:en.yangtalks.com,2018-07-13:/2018/way-to-typescript.html</guid><category>Web</category><category>web</category></item><item><title>Fast Build Your App with Vue.Js</title><link>https://en.yangtalks.com/2018/vue-js.html</link><description>&lt;p&gt;&lt;img alt="vuejs" src="https://en.yangtalks.com/2018/vuejs.png"&gt;&lt;/p&gt;
&lt;p&gt;I used to refuse front end development. I knew HTML, I knew CSS, I knew Javascript, but I didn’t know how they work together. Even later I had the knowledge of jQuery, of CoffeeScript, of AngularJS, I still didn …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yang Zhao</dc:creator><pubDate>Tue, 03 Jul 2018 20:10:00 +1200</pubDate><guid isPermaLink="false">tag:en.yangtalks.com,2018-07-03:/2018/vue-js.html</guid><category>Web</category><category>ef</category></item><item><title>POCO and T4</title><link>https://en.yangtalks.com/2018/poco-and-t4.html</link><description>&lt;p&gt;It’s been a while not writing any post, I’ll try finish this series before I get tired of it. This time I’ll talk about two words - POCO and T4&lt;/p&gt;
&lt;h2&gt;What is POCO?&lt;/h2&gt;
&lt;p&gt;POCO is Plain Old CLR …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yang Zhao</dc:creator><pubDate>Tue, 15 May 2018 21:10:00 +1200</pubDate><guid isPermaLink="false">tag:en.yangtalks.com,2018-05-15:/2018/poco-and-t4.html</guid><category>EntityFramework</category><category>ef</category></item><item><title>Entity Data Model Generation</title><link>https://en.yangtalks.com/2018/edm-generation.html</link><description>&lt;p&gt;&lt;strong&gt;Database/Model First&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Let's get one step back and have a quick look at how the conceptual models had been built at the beginning.&lt;/p&gt;
&lt;p&gt;Before we build the database and the program, there's an equal chance for either having database …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yang Zhao</dc:creator><pubDate>Wed, 18 Apr 2018 23:10:00 +1200</pubDate><guid isPermaLink="false">tag:en.yangtalks.com,2018-04-18:/2018/edm-generation.html</guid><category>EntityFramework</category><category>ef</category></item><item><title>Entity Object Tracking</title><link>https://en.yangtalks.com/2018/entity-object-tracking.html</link><description>&lt;p&gt;&lt;strong&gt;Object State&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Last time we introduced how to query database from conceptual models. It includes LINQ to Entities and Entity SQL. With &lt;code&gt;IQueryable&lt;/code&gt; object, the sql script will be built and executed automatically within the method &lt;code&gt;.ToList()&lt;/code&gt;. After the data …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yang Zhao</dc:creator><pubDate>Wed, 04 Apr 2018 21:09:00 +1200</pubDate><guid isPermaLink="false">tag:en.yangtalks.com,2018-04-04:/2018/entity-object-tracking.html</guid><category>EntityFramework</category><category>ef</category></item><item><title>Query in Entity Framework</title><link>https://en.yangtalks.com/2018/query-in-ef.html</link><description>&lt;p&gt;With Entity Data Model, we built the connection between conceptual models and database schema. The next question would be how we’re going to code with the EDM objects.&lt;/p&gt;
&lt;p&gt;Today we’ll have a quick view to LINQ to Entities …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yang Zhao</dc:creator><pubDate>Thu, 22 Mar 2018 21:09:00 +1300</pubDate><guid isPermaLink="false">tag:en.yangtalks.com,2018-03-22:/2018/query-in-ef.html</guid><category>EntityFramework</category><category>ef</category></item><item><title>Entity Data Model XML</title><link>https://en.yangtalks.com/2018/entity-data-model-xml.html</link><description>&lt;p&gt;Last time, we described how Entity Data Model(EDM) was designated to help DBA and developer to work with their own contexts. Today let’s dig deeper into EDM to see what it consists of and what it looks like …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yang Zhao</dc:creator><pubDate>Thu, 15 Mar 2018 22:00:00 +1300</pubDate><guid isPermaLink="false">tag:en.yangtalks.com,2018-03-15:/2018/entity-data-model-xml.html</guid><category>EntityFramework</category><category>ef</category></item><item><title>Introduction to Entity Data Model</title><link>https://en.yangtalks.com/2018/introduction-to-entity-data-model.html</link><description>&lt;blockquote&gt;
&lt;p&gt;There is always something exists for a mysterious reason. 'Mysterious' doesn't mean it is unknown, but we are too lazy to know. The Entity Framework technology is one of those things for me. It was set up at the very …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yang Zhao</dc:creator><pubDate>Thu, 08 Mar 2018 23:14:00 +1300</pubDate><guid isPermaLink="false">tag:en.yangtalks.com,2018-03-08:/2018/introduction-to-entity-data-model.html</guid><category>EntityFramework</category><category>ef</category></item><item><title>Docker and dockerspace</title><link>https://en.yangtalks.com/2017/docker-and-dockerspace.html</link><description>&lt;h3&gt;Dev&lt;/h3&gt;
&lt;p&gt;There’s a common experience for every developer that new to a company. It’s painful, annoying and frustrating. Everyone knows it would be there but nobody can avoid it. And the pain itself, later on, would also become …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yang Zhao</dc:creator><pubDate>Mon, 26 Jun 2017 21:14:00 +1200</pubDate><guid isPermaLink="false">tag:en.yangtalks.com,2017-06-26:/2017/docker-and-dockerspace.html</guid><category>Blog</category><category>docker</category></item><item><title>Golang and Unleashed</title><link>https://en.yangtalks.com/2016/golang-and-unleashed.html</link><description>&lt;p&gt;Recently I opened a new project called "&lt;a href="https://github.com/zentby/go-unleashed"&gt;go-unleashed&lt;/a&gt;". It's an Unleashed API client written in golang. As my first go project it is deeply inspired by &lt;a href="https://github.com/google/go-github"&gt;go-github&lt;/a&gt;. You would feel they are really familiar as I'm trying to learn test …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yang Zhao</dc:creator><pubDate>Thu, 29 Sep 2016 21:14:00 +1300</pubDate><guid isPermaLink="false">tag:en.yangtalks.com,2016-09-29:/2016/golang-and-unleashed.html</guid><category>Go</category><category>code</category><category>golang</category></item></channel></rss>